function begin(){
    var nd = document.createElement('div');
    var info = `1. Что означает аббревиатура VHDL (расшифровка сокращения)</br>    Very high speed Hardware Description Language</br>    2. В чем HDL языки отличается от традиционных языков программирования?</br>    HDL описывают оборудование, а не выполнение программы на компьютере</br>    3. Какие из следующих HDL являются стандартами IEEE?</br>    VHDL and Verilog</br>    4. Почему имеется нужда в HDL, несмотря на множество традиционных языков программирования?</br>    Некоторые характеристики цифрового оборудования не могут быть описаны традиционными языками.</br>    5. Зачем нам нужна параллельная обработка для описания цифровых систем в HDL?</br>    Сложность цифровых систем требует параллельной обработки</br>    6. VHDL основан на каком из следующих языков программирования?</br>    ADA </br>    7. В чем преимущество использования VHDL вместо любого другого HDL?</br>    Портативность</br>    8. Что из следующего является характеристикой VHDL?</br>    Строго типизированный язык</br>    9. Что из следующего является основным строительным блоком проектирования?</br>    Сущность</br>    10. Пакет в VHDL состоит из …?</br>    Обычно используемые типы данных и подпрограммы</br>    11. Полное описание проектируемой схемы приведено в …?</br>    Архитектура</br>    12. Для чего используется раздел конфигурации?</br>    Чтобы добавить какой-либо компонент в любую пару архитектуры объекта</br>    13. В VHDL, шина является типом …?</br>    Сигнал</br>    14. Драйвер можно рассматривать как … сигнала?</br>    Источник</br>    15. Предопределенные данные для объекта VHDL называются …?</br>    Атрибут</br>    16. Процесс является основным модулем исполнения в VHDL?</br>    правда</br>    17. Что из следующего правильно описывает структуру кода VHDL?</br>    библиотечная декларация; Декларация юридического лица; Архитектурная декларация; Конфигурации</br>    18. Какое из следующих утверждений верно?</br>    Библиотека представляет собой набор пакетов</br>    19. Что из следующего используется в конце оператора?</br>    Точка с запятой</br>    20. Правильно объявленная библиотека для кода VHDL ?</br>    </br>    21. Что из следующего не определяется сущностью? Поведение сигналов</br>    22. Что из следующего может быть именем сущности? И-затвор </br>    23. Что из следующего является правильным синтаксисом для объявления сущности?</br>    ENTITY entity_name IS</br>        PORT( signal_names : signal_modes;</br>        signal_names : signal_modes);</br>       END entity_name;</br>    24. В нижеприведенном коде, </br>    ENTITY mux IS</br>    Port ( a,b : IN STD_LOGIC;</br>    Y : OUT STD_LOGIC);</br>    END mux;</br>    сколько выводов ввода-вывода есть в объекте MUX?</br>    3</br>    25. Какой из следующих режимов сигнала является двунаправленным? ВХОД</br>    26. В операторе присваивания сигнал out может использоваться только…? Left of <= operator</br>    27. На какой стороне оператора присваивания мы можем использовать сигнал типа IN? Right правый  </br>    28. В чем разница между out и buffer? BUFFER можно читать, а также присваивать значение, но OUT можно только быть присвоено</br>    29. Что из перечисленного ниже объявлено для полного сумматора?  </br>    ENTITY full_adder IS </br>        PORT ( a, b, c :  IN  BIT ; </br>        s, co :  OUT  BIT ) ; </br>       КОНЕЦ full_adder ;</br>    30. Как управлять структурой и изменять временные характеристики сущности? Используя GENERICS</br>    31. Что из перечисленного ниже может иметь несколько драйверов? INOUT</br>    32. Что из перечисленного ниже является режимом по умолчанию для переменной порта? IN</br>    33. Что определяет архитектурное тело сущности? Внутренний функционал Internal functionality</br>    34. Какой из следующих синтаксисов является правильным для объявления и определения архитектурного тела? </br>    ARCHITECTURE architecture_name OF entity_name IS</br>         Declarations_for_architecture</br>         BEGIN</br>         Code;</br>         ….</br>         END architecture_name;</br>    35. Что содержит декларативная часть архитектуры? Объявление локальных сигналов, констант или подпрограмм</br>    36. Что из перечисленного является правильной архитектурой для Nand элемента?  </br>    ARCHITECTURE my_arch OF nand_gate IS</br>        BEGIN</br>        x <= a NAND b;</br>        END my_arch;</br>    37. Что из следующего может быть именем архитектурного тела? arch_1</br>    38. Что из перечисленного не может быть объявлено в части объявления архитектуры? </br>    39. Какие из следующих операторов выполняются быстрее? Параллельные операторы</br>    40. Как используется ключевое слово "TYPE"? TYPE datatype_name IS datatype_range;</br>    41. Что из перечисленного ниже является неправильным объявлением для нового типа данных? TYPE my_logic IS <0 TO 20 ></br>    42. Подтип можно определить, как …? ТИП с некоторым ограничением</br>    43. Какой из следующих синтаксисов является правильным для объявления подтипа? SUBTYPE subtype_name IS TYPE subtype_range</br>    44. Что из перечисленного </br>    TYPE color IS (red, green, blue, black, white, gray);</br>    SUBTYPE primary IS color RANGE red to blue;</br>    VARIABLE x: primary;</br>    не может быть значением x? White</br>    45. Посмотрите на следующие объявления:</br>    TYPE array1 IS ARRAY ( 0 TO 3 ) OF BIT_VECTOR (3 DOWNTO 0 ); </br>    TYPE array 2 IS ARRAY ( 0 TO 3 ) OF array1;</br>    Сколько всего бит может быть сохранено в этих массивах? 64</br>    46. См. четыре объявления ниже, что из перечисленного ниже </br>    TYPE array1 IS ARRAY ( 3 DOWNTO 0, 1 DOWNTO 0 ) OF STD_LOGIC;</br>    TYPE array2 IS ARRAY (3 DOWNTO 0 ) OF STD_LOGIC_VECTOR( 3 DOWNTO 0 );</br>    TYPE array3 IS ARRAY (2 DOWNTO 0 )  OF array2;</br>    TYPE array4 IS ARRAY ( 0 TO 3, 3 DOWNTO 0 ) OF BIT;</br>    не является двумерным массивом? Array3</br>    47. Обратитесь к приведенному ниже коду, </br>    Line 1: SUBTYPE my_logic IS STD_LOGIC RANGE ‘0’ TO ‘1’;</br>    Line 2: SIGNAL a: BIT;</br>    Line 3: SIGNAL b: STD_LOGIC;</br>    Line 4: SIGNAL c: my_logic;</br>    Line 5: b<=a;</br>    Line 6: b<=c;</br>    какая из следующих строк содержит ошибку?  Line 5</br>    48. Как правильно присвоить y значение 2x+10 </br>    TYPE long IS INTEGER RANGE -1000 TO 1000;</br>    TYPE short IS INTEGER RANGE -10 TO 10;</br>    SIGNAL x : short;</br>    SIGNAL y : long;</br>    в следующем коде?  y <= long (2*x + 10);</br>    49. В приведенном ниже коде </br>    TYPE my_int IS INTEGER RANGE -32 TO 32;</br>    TYPE other_int IS INTEGER RANGE 0 TO 100;</br>    SIGNAL x : my_int;</br>    SIGNAL y : other_int;</br>    y <= x + 2;</br>    …</br>    какая будет ошибка во время компиляции? Несоответствие типов</br>    50. Что из перечисленного не является оператором присваивания? =</br>    51. Переменная y объявляется STD_LOGIC_VECTOR типа 4 бита, если вы хотите присвоить 1001 y, какая инструкция присвоения будет? y := «1001»</br>    52. Обратитесь к приведенному ниже коду, </br>    SIGNAL x: STD_LOGIC;</br>    SIGNAL y: STD_LOGIC_VECTOR(3 DOWNTO 0);</br>    который является правильным оператором присвоения? y <= (1 => ‘1’, OTHERS => ’0’); </br>    53. Какой из следующих логических операторов имеет наивысший приоритет? NOT</br>    54. В следующих утверждениях </br>    y <= NOT a AND b;</br>    z <= NOT (a AND b);</br>    y и z эквивалентны …?  y <= a’+b and z <= a’+b’</br>    55. Какой из следующих операторов VHDL эквивалентен операции NAND, если y, a и b являются СИГНАЛАМИ? y <= NOT a OR NOT b</br>    56. ______ оператор является как унарным, так и бинарным?  –</br>    57. Оператор ‘&’ называется оператором _____? Concatenation operator  Оператор конкатенации</br>    58. СИГНАЛ x: STD_LOGIC; В этом утверждении х?  Идентификатор  </br>    59. Для чего используются операторы смены? Сдвинуть данные</br>    60. Что такое оператор «SLL»?  Shift Left Logical</br>    61. См. приведенный ниже код, </br>    VARIABLE x : BIT_VECTOR(3 DOWNTO 0) := 1010;</br>    VARIABLE y : BIT_VECTOR(3 DOWNTO 0) := 0000;</br>    VARIABLE z : BIT_VECTOR(3 DOWNTO 0) := 0000;</br>    …</br>    y := x SRL 2;</br>    z := x SLL 2;</br>    …</br>    каким должен быть вывод идентификаторов "y" и "z"? y = 0010 and z = 1000</br>    62. В следующем коде VHDL значения y и z равны ? y = 1110 и z = 0111</br>    63. Операция SLL эквивалентна какой из следующих операций? Умножение на 2</br>    64. Что из следующего является эквивалентом оператора делением на 2? SRL</br>    65. В приведенном ниже коде, </br>    VARIABLE x : BIT_VECTOR(3 DOWNTO 0) := 1001;</br>    VARIABLE y : BIT_VECTOR(3 DOWNTO 0) := 0000;</br>    VARIABLE z : BIT_VECTOR(3 DOWNTO 0) := 0000;</br>    …</br>    y := x ROR 2;</br>    z := y ROL 2;</br>    …</br>    каковы будут значения y и z? y = 0110 и z = 0110</br>    66. Как будет решаться выражение в операторе, содержащем два или более операторов с одинаковым приоритетом? слева направо</br>    67. Какими будут значения следующих переменных</br>    x = 5 MOD 3;</br>    y = -5 MOD 3;</br>    z = 5 MOD -3;</br>    после операций MOD? х = 2, у = 1 и z = -2</br>    68. Какими будут значения следующих переменных </br>    x = 5 REM 3;</br>    y = -5 REM 3;</br>    z = 5 REM -3;</br>    после операций REM? x = 2, y = -2 and z = 2</br>    69. Процесс - это _______ оператор? Параллельно</br>    70. Если в коде VHDL более одного процесса, как они выполняются? Одновременно</br>    71. Локальные переменные в процессе могут быть объявлены…? Перед ключевым словом BEGIN</br>    72. Что из следующего является правильным синтаксисом для объявления процесса?  </br>    {Label :} PROCESS {sensitivity_list}</br>         {process_declaration_part}</br>         BEGIN</br>         sequential_statements;</br>         END PROCESS {Label};</br>    73. Список чувствительности процесса содержит?  сигналы</br>    74. Обратитесь к приведенному ниже коду, какая из следующих строк содержит ошибку</br>    Строка 1: SUBTYPE my_logic IS STD_LOGIC RANGE ‘0’ TO ‘1’;</br>    Строка 2: SIGNAL a: BIT;</br>    Строка 3: SIGNAL b: STD_LOGIC;</br>    Строка 4: SIGNAL c: my_logic;</br>    Строка 5: b<=a;</br>    Строка 6: b<=c;</br>    ? 5 -я строка</br>    75. Как правильно присвоить значение 2x+10 y в следующем коде</br>    TYPE long IS INTEGER RANGE -1000 TO 1000;</br>    TYPE short IS INTEGER RANGE -10 TO 10;</br>    SIGNAL x : short;</br>    SIGNAL y : long;</br>    ? y <= long (2*x + 10);</br>    76. В приведенном ниже коде что за ошибка будет во время компиляции</br>    TYPE my_int IS INTEGER RANGE -32 TO 32;</br>    TYPE other_int IS INTEGER RANGE 0 TO 100;</br>    SIGNAL x : my_int;</br>    SIGNAL y : other_int;</br>    y <= x + 2;</br>    …</br>    ? Несоответствие типов</br>    77. Какой из следующих пакетов ieee содержит большинство функций преобразования данных? STD_LOGIC VECTOR</br>    78. Если мы используем функцию conv_integer (p), то что из перечисленного не может быть типом параметра ‘p’?</br>    79. В функции conv_unsigned (p, b) на что ссылаются p и b? </br>    p — объект данных, который необходимо преобразовать, и b — биты, необходимые в преобразованной переменной</br>    80. Что из следующего является правильным синтаксисом для преобразования INTEGER ‘p’ в число SIGNED из числа «b» битов? conv_signed(p,b);</br>    81. Функция conv_std_logic_vector (p, b) используется для _______? Converting any data type ‘p’ into STD_LOGIC_VECTOR with ‘b’ bits  </br>    Преобразование любого типа данных «p» в STD_LOGIC_VECTOR с битами «b»</br>    82. Каким будет значение y после выполнения следующего кода</br>    Library ieee;</br>    USE ieee.std_logic_1164.all;</br>    USE ieee.std_logic_arith.all;</br>    …</br>    SIGNAL m : UNSIGNED (3 DOWNTO 0);</br>    SIGNAL n : UNSIGNED (3 DOWNTO 0);</br>    SIGNAL y : STD_LOGIC_VECTOR (7 DOWNTO 0);</br>    y <=CONV_STD_LOGIC_VECTOR ((m+n), 8);</br>    …</br>    ? 8- bit STD_LOGIC_VECTOR m+n</br>    83. Какой будет вывод, см. приведенный ниже код</br>    Library ieee;</br>    USE ieee.std_logic_1164.all;</br>    USE ieee.std_logic_arith.all;</br>    …</br>    SIGNAL a : IN INTEGER;</br>    SIGNAL b : IN UNSIGNED (3 DOWNTO 0);</br>    SIGNAL y : OUT STD_LOGIC_VECTOR (7 DOWNTO 0);</br>    y <<=CONV_STD_LOGIC_VECTOR ((a+b), 8);</br>    …</br>    ? Error</br>    </br>    84. Как используется ключевое слово "TYPE"? </br>    TYPE datatype_name IS datatype_range;</br>    </br>    85. Что из следующего является неправильным объявлением для нового типа данных?</br>    TYPE my_logic IS <0 TO 20 ></br>    </br>    86. Подтип может быть определен как _________?</br>    ТИП с некоторым ограничением</br>    87. Что из следующего является правильным синтаксисом для объявления Подтипа?</br>    SUBTYPE subtype_name IS TYPE subtype_range</br>    </br>    </br>    88. Обратитесь к приведенному ниже коду. Что из перечисленного не может быть значением x</br>    TYPE color IS (red, green, blue, black, white, gray);</br>    SUBTYPE primary IS color RANGE red to blue;</br>    VARIABLE x: primary;</br>    ? </br>    White</br>    89. Посмотрите на следующие объявления:</br>    TYPE array1 IS ARRAY (0 TO 3) OF BIT_VECTOR (3 DOWNTO 0); </br>    TYPE array 2 IS ARRAY (0 TO 3) OF array1;</br>    Сколько всего бит может быть сохранено в этих массивах?</br>    64</br>    90. Обратитесь к четырем объявлениям ниже, что из следующего не является двумерным массивом</br>    TYPE array1 IS ARRAY ( 3 DOWNTO 0, 1 DOWNTO 0 ) OF STD_LOGIC;</br>    TYPE array2 IS ARRAY (3 DOWNTO 0 ) OF STD_LOGIC_VECTOR( 3 DOWNTO 0 );</br>    TYPE array3 IS ARRAY (2 DOWNTO 0 )  OF array2;</br>    TYPE array4 IS ARRAY ( 0 TO 3, 3 DOWNTO 0 ) OF BIT;</br>    ?</br>    array3</br>    91. Что из следующего является ПОДТИПОМ INTEGER? NATURAL ЕСТЕСТВЕННЫЙ</br>    92. Самая основная форма поведенческого моделирования в VHDL - это _______? операторы присваивания Assignment</br>    93. Что из перечисленного ниже, верно, для любого оператора параллельного присваивания? Оператор выполняется столько раз, сколько изменяется значение</br>    94. Основная проблема с поведенческим моделированием ________? Асинхронные задержки</br>    95. Какая функция используется для создания одного значения для нескольких сигналов драйвера? Функция разрешения</br>    96. Обратитесь к приведенному ниже коду, какой из следующих сигналов управляется несколькими драйверами</br>    LIBRARY IEEE;</br>    USE IEEE.std_logic_1164.all;</br>    ENTITY function IS</br>    PORT (b, c : IN BIT;</br>    a, d : OUT BIT);</br>    END function;</br>    ARCHITECTURE behavior OF my_func IS</br>    BEGIN</br>    a. a <= b;</br>    b. a <= c;</br>    c. d <= b;</br>    END behavior;</br>    ? a</br>    97. Что подразумевается под блоком? Подмодуль в теле архитектуры </br>    98. Какова область действия переменных или сигналов, объявленных в операторе блока? локальный для самого блока</br>    99. Что из следующего определяет интерфейс блока? Заголовок блока</br>    100. Охраняемый блок имеет дополнительное ________ выражение? Сторожевое Guard</br>    101. Каким должен быть тип значения охранного выражения? BOOLEAN</br>    102. Какова основная цель использования блоков? Улучшить читабельность</br>    103. Что из перечисленного ниже лучше для разбиения проекта? Создание экземпляра компонента</br>    104. Что из следующего, верно, для охраняемых блоков? Защищенные блоки могут содержать как защищенные, так и незащищенные операторы</br>    105. Какими будут значения out1 и out2</br>    ARCHITECTURE bhv OF example IS</br>    CONSTANT out1 : BIT;</br>    CONSTANT out2 : BIT;</br>    BEGIN</br>    B1 : BLOCK</br>    CONSTANT S : BIT := 0;</br>    BEGIN</br>    B1-1 : BLOCK</br>    SIGNAL S : BIT := 1;</br>    BEGIN</br>    out1 <= S;</br>    END BLOСK B1-1;</br>    out2 <= S;</br>    END BLOCK B1;</br>    END bhv;</br>    ?  out1 = 1 and out2 = 0</br>    106. Что из следующего определяется в структурном моделировании? Структура схемы</br>    107. Что из перечисленного ниже не является способом разделения проекта?  Процессы</br>    108. Какова основная единица структурного моделирования?  Создание экземпляра компонента</br>    109. Что из перечисленного ниже аналогично объявлению объекта в структурном моделировании? Объявление компонента</br>    110. Что вы подразумеваете под компонентной реализацией? Использовать компонент</br>    111. Структурная модель похожа на ___________? Принципиальная блок-схема схемы</br>    112. Что из следующего является правильным синтаксисом для создания компонентов? </br>    COMPONENT component_name IS</br>         PORT ( port_name : mode type;</br>         port_name : mode type;</br>          ….);</br>          END COMPONENT;</br>    113. Что из следующего должно быть известно для описания структурной модели в VHDL? метка: имя_компонента КАРТА ПОРТОВ (список_портов);</br>    114. В какой части кода VHDL должны быть объявлены компоненты?  Configuration</br>    115. Какая из следующих функций используется для отображения компонента? КАРТА ПОРТА</br>    116. Сколько способов в VHDL для отображения компонентов? 2</br>    117. Компонент имеет 3 порта - два входа (a и b) и один выход (y). Какое из следующих утверждений предназначено для позиционного сопоставления компонента? LABEL : my_component PORT MAP (l, m, n);</br>    118. Что из следующего является правильным способом оставить порт неподключенным? L1: my_component PORT MAP(a => OPEN);</br>    119. Что относится к типу моделирования? ) Тип операторов описания в блоке архитектуры кода VHDL</br>    120. Что из перечисленного не является типом моделирования VHDL? компонентное моделирование</br>    121. Что описывают в поведенческом моделировании? Как система работает с заданными входными значениями</br>    122. Какие из следующих операторов используется в структурном моделировании? portmap()</br>    123. Какой основной модуль поведенческого описания? Процесс</br>    124. Какой из следующих стилей моделирования следует последовательной обработке инструкций? Моделирование поведения</br>    125. __________ моделирование использует логические элементы и базовые блоки для описания функциональности системы? поток данных</br>    126. Реализация компонентов является частью __________ моделирования? Структура</br>    127. Какой тип моделирования используется для описания системы, см. приведенный ниже код</br>    ARCHITECTURE and_1 OF and_gate IS</br>    begin</br>    process(a, b, y)</br>    begin</br>    IF(a = ‘1’ and b = ‘1’) THEN</br>    y <= ‘1’;</br>    ELSE y <=’0’;</br>    end IF;</br>    END process;</br>    END and_1;</br>    ? поведенческий</br>    128. Какая логическая функция описана в приведенном ниже коде</br>    ARCHITECTURE my_func OF my_logic IS</br>    begin</br>    process(a, b, y)</br>    begin</br>    IF(a = ‘0’ and b = ‘0’) THEN</br>    y <= ‘0’;</br>    ELSIF (a = ‘1’ and b= ‘1’) THEN</br>    y<= ‘0’;</br>    ELSE y <= ‘1’;</br>    END if;</br>    END process;</br>    END my_func;</br>    ? ЭКСОР EXOR</br>    129. Какой стиль моделирования представляет следующий код</br>    Architecture my_logic OF logic_func IS</br>    Component gate_1</br>    PORT (b1, b2 : IN BIT;</br>    s : OUT BIT);</br>    END component;</br>    Component gate_2 IS</br>    PORT (b1,b2 : IN BIT;</br>    C : OUT BIT);</br>    END component;</br>    SIGNAL a, b, sum, carry : BIT;</br>    begin</br>    EXOR : gate_1 portmap (a, b, sum);</br>    AND : gate_2 portmap (a,b ,carry);</br>    END my_logic</br>    ? Structural</br>    130. Присваивание сигнала рассматривается как ________?Параллельный оператор </br>    131. Как мы можем использовать оператор присваивания в качестве последовательного присваивания? Используя его в любом процессе</br>    132. Оператор последовательного присваивания активируется всякий раз, когда ________? процесс завершается</br>    133. Оператор параллельного присваивания активируется всякий раз, когда ______? Связанный сигнал изменяет свое значение</br>    134. Оператор условного присвоения является присвоением _________? параллельный</br>    135. Задержки обычно игнорируются в________ операторах присваивания? Последовательно</br>    136. Что из перечисленного не может быть режимом для целевого операнда оператора присваивания? IN</br>    137. Какое из следующих ключевых слов используется для условного присваивания? WHEN КОГДА</br>    138. Для сигнала, используемого в последовательном назначении, он может иметь _______ драйверов?  1</br>    139. Выбранный параллельный оператор эквивалентен ________ последовательному оператору? Случай Case</br>    140. Присвоения, помещенные под ________, являются параллельными? Архитектура</br>    141. Оператор присваивания переменной выполняется за время ______? Немедленно (ноль)</br>    142. Какая задержка используется в операторе присвоения сигнала</br>    x <= 1 AFTER 10ns</br>    ? Инерционная задержка</br>    143. Инерционная задержка в присвоении сигнала полезна для ___________?  Игнорировать входные помехи</br>    144. Какое из следующих операторов является оператором нулевой задержки? y := x AFTER 10 ns</br>    145. Что из следующего не является оператором присваивания? :></br>    146. Следующий код представляет, какой из логических элементов</br>    WITH ab SELECT </br>    y <= 1 WHEN “11”;0	WHEN OTHERS;</br>    ? And gate</br>    147. Процесс – это _______ оператор? Параллельно</br>    148. Если в коде VHDL более одного процесса, как они выполняются? Одновременно</br>    149. Локальные переменные в процессе могут быть объявлены __________? Перед ключевым словом BEGIN</br>    150. Какие из следующих операторов можно рассматривать как последовательный эквивалент выбранного параллельного присваивания?  CASE СЛУЧАЙ</br>    151. __________ не может быть объявлен внутри процесса? Сигнал</br>    152. Процесс может быть __________ с использованием операторов WAIT? приостановлено, а также возобновлено</br>    153. Отложенный процесс запускается ___________?</br>    </br>    154. Какой из следующих операторов не может быть использовано внутри процесса?</br>    155. Какой из следующих сигналов использует ключевое слово EVENT?</br>    Clock</br>    156. Какое утверждение является для оператора IF?</br>    последовательный</br>    157. Какое из следующих ключевых слов не связано с оператором IF?</br>    WHEN</br>    158. Если условие оператора IF является выражением, то каким должен быть тип результата выражения?</br>    Boolean</br>    159. В следующих строках каким должно быть значение сигнала y, если a и b оба имеют высокий логический уровень</br>    PROCESS (a, b)</br>    BEGIN</br>    IF( a XOR b <=’1’)</br>    y <= ‘1’;</br>    ELSIF (a AND b <= ‘0’)</br>    y <= a;</br>    ELSE</br>    y <= ‘0’;</br>    END IF;</br>    END PROCESS;</br>    ?</br>    0</br>    </br>    160. Какая логика описана в следующей схеме</br>    PROCESS (a, b)</br>    IF (a = ‘1’ AND b = ‘0’ OR a= ’0’ AND b = ‘1’) THEN</br>    y <= ‘1’;</br>    ELSIF (a = ‘1’ AND b= ‘1’) THEN</br>    y <= ‘0’;</br>    ELSE</br>     y <= ‘0’;</br>    END IF</br>    ?</br>    EXOR</br>    161. Один оператор IF может иметь несколько ___________?</br>    ELSIF</br>    162. Пользователь получает ошибку во время симуляции, которая гласит, что « the IF statement is illegal », в чем может быть причина?</br>    Использование оператора IF в теле архитектуры</br>    163. В синхронизированном процессе оператор IF используется для _____?</br>    Для обнаружения тактового сигнала</br>    164. Какое из следующих утверждений используется при отсутствии сигналов в чувствительном списке?</br>    WAIT</br>    165. Какие из следующих операторов можно рассматривать как последовательные, эквивалентные выбранному параллельному присваиванию?</br>        CASE</br>    </br>    166. Все сигналы, описанные в entity, являются видимыми во всех архитектурах, связанных с entity? Да</br>    167. Шина и вектор два обозначения одного и того же понятия (концепции) в VHDL?  ДА Вектор предоставляет нам способ представления группы сигналов или шины данных.</br>    168. Каждый порт должен иметь спецификацию своего направления (например, in, out, inout)?  ДА</br>    169. 169.Имя декларации entity может быть записано после оператора end этой декларации entity?  Нет</br>    170.    ENTITY <имя_модели> IS</br>    171.          GENERIC (<декларация_глобальных_констант_модели>);</br>    172.         PORT (<декларация_портов_модели>);</br>    173.      END <имя_модели>;</br>    174. Значение настраиваемого параметра (generic) может динамически меняться в процессе моделирования?  Да </br>    175. .Настраиваемый параметр (generic) позволяет задать ввод постоянной величины (константы) в проектируемую систему извне ее?	 Да</br>    176. Настраиваемый параметр может быть использован для спецификации портов, например, для задания ширины шин?  Да</br>    177. Имея в виду модельное время, можно ли сказать, что оператор a<=b; выполняется мгновенно?  Да</br>    178. Имея в виду физическое время, можно ли сказать, что система моделирования (компьютерная программа) выполняет оператор a<=b; мгновенно?  Нет</br>    179. Каждый настраиваемый параметр должен быть определен вместе со своим направлением? нет</br>    180. Может ли сигнал типа string быть выходным портом? </br>    -</br>    181. Процедура может быть декларирована в пакете? </br>    182. Да, функции и процедуры должны существовать как в разделе объявлений, так и в разделе тела.</br>    </br>    183. Может ли сигнал A типа integer передать свое значение сигналу B типа real с помощью оператора B <= A after 5 ns; ?</br>    Да</br>    184. Может ли значение '0' быть назначено сигналу типа boolean? </br>    Нет, только TRUE, FALSE</br>    185. Внутренние состояния конечного автомата могут определяться как перечислимый тип? </br>        Да</br>    186. В VHDL можно умножать действительное число на целое? </br>    Нет</br>    187. Можно ли декларировать двумерный массив, элементами которого являются натуральные числа, не большие 1000? </br>    188. Нет, целочисленный диапазон от 0 до 1000 обычно синтезируется как беззнаковый (от 9 до 0) без дополнительной логики для счетчика. Соответственно он перекатывается с 1023 на 0.</br>    </br>    189. Чтобы избежать ошибку переполнения, вы должны либо добавить явную обработку переполнения, либо расширить диапазон до 1023.</br>    </br>    190. 183. Если длительность сигнала больше чем его задержка, то инерционная модель задержки даст тот же результат, что и транспортная модель задержки? </br>    -</br>    191. 184. Атрибут clk'event сигнала clk имеет тип boolean?</br>        Да</br>    192. 185. Атрибут S'left массива S целых чисел задает левое значение номера числа (индекса) в массиве? </br>    Да</br>    193. 186.  Сигналы имеют атрибуты? </br>    194. Да, S’stable[(T)] — сигнал, равный true, если за промежуток времени Т не было событий у сигнала S. </br>    195. S’transaction — сигнал типа bit, меняет значение на противоположное в циклах моделирования, в которых было присваивание нового значение сигналу S. </br>    196. S’event — сигнал, равный true, если произошло событие в сигнале S в данном цикле моделирования.</br>    </br>    197.  S’active — сигнал, равный true, если произошло присваивание нового значение сигналу S в данном цикле моделирования. </br>    198. S’last_value — сигнал такого же типа, что и S, содержащий значение S до последнего события в нем.</br>    </br>    199. 187.  В языке VHDL значение “истина” типа boolean равно значению '1' типа bit? </br>     Нет</br>    200. 188. При определении декларации константы достаточно описать только ее значение, так как тип константы определяется значением? ]</br>    211.   Типы std_logic и std_logic_vector являются промышленным стандартом для логических сигналов и могут применяться для сигналов с многими</br>    источниками</br>    212. источниками, так как эти типы являются “разрешимыми”?</br>    не понятный вопрос</br>    213. операторов, взаимодействующих между собой и находящихся под влиянием друг друга?</br>     не понятный вопрос</br>    214. Операторы процесса (process) не могут употребляться вместе с операторами (<=) назначения сигнала в одной и той же архитектуре?</br>    не могут</br>    215.  Оператор null назначает нулевое значение сигнала типа bit?</br>     Нет, данный оператор не выполняет никаких действий</br>    216.  Оператор next позволяет перейти к выполнению следующего (по порядку записи) оператора архитектурного тела?</br>    Нет, оператор next блокирует исполнение всех последующих операторов в текущем цикле и обеспечивает автоматический переход к следующей итерации.</br>    217. Оператор next позволяет перейти к выполнению следующего (по порядку записи) оператора блока? </br>    Нет</br>    218. Оператор next позволяет перейти к выполнению следующей итерации цикла? </br>    Да</br>    219.  Оператор exit позволяет завершить выполнение операторов архитектурного тела?</br>    Нет</br>    220.  Оператор конкретизации компонента (port map) может употребляться как в архитектурном теле (как параллельный оператор), так и в процессе (как последовательный оператор)?</br>     Да</br>    221. Тип bit как стандартный логический тип не нуждается в разрешающей функции и может употребляться для сигналов с многими источниками?</br>    Да</br>    222. Конструкция if … then может употребляться внутри процесса?</br>    Да </br>    201. Блок (block) содержит последовательные операторы? </br>    202. Оператор блока (block) может иметь охранное выражение?</br>    203. Пакет может иметь охранное выражение? </br>    204. Имя процесса декларируется после слова process? </br>    205. Счетчик в цикле типа for есть переменная, которую нужно декларировать в начале процесса, в котором цикл употребляется? </br>    206. Сигналам назначаются значения тогда, когда все процессы в данном такте моделирования выполнены? (да)</br>    207. При декларации возрастающего диапазона употребляется ключевое слово downto? (нет)</br>    208. Ключевое слово to употребляется при декларации убывающего диапазона? </br>    209. Для сигналов типа real никогда не нужна разрешающая функция?</br>    210. Переменные могут употребляться для хранения промежуточных данных внутри процессов? </br>    211. словами end if? </br>    212. Конструкция if … then может употребляться внутри функции?</br>    a. Да	</br>    213. Цикловой параметр (счетчик числа итераций цикла) требуется декларировать снаружи цикла, записываемого с ключевым словом for?</br>    a. Нет, он декларируется в заголовке цикла. </br>    214. Функция может содержать последовательный оператор ожидания (wait)? </br>    a. Нет</br>    215. Оператор wait приостанавливает выполнение процесса? </br>    a. Да</br>    216. Оператор case может употребляться внутри процедуры? (да)</br>    a. Да</br>    217. Оператор port map может быть употреблен в функции? (нет)</br>    a. Нет ?</br>    218. Оператор port map может быть употреблен в процедуре? </br>    a. Нет ?</br>    219. Оператор port map может быть употреблен в теле оператора generate? </br>    a. Да</br>    220. Оператор xor может выполняться над операндами типа bit_vector? </br>    a. Да</br>    221. Оператор and не может выполняться над операндами типа boolean? </br>    a. Может</br>    222. Оператор or может выполняться над операндами типа std_logic? </br>    a. Да, может</br>    223. Оператор or может выполняться над операндами типа std_logic_vector? </br>    a. Да, может</br>    224. Может ли в одном операторе port map быть назначение на одни порты одиночных бит, на другие порты – векторов? </br>    a. Да</br>    225. Всегда ли все компоненты иерархического описания должны быть специфицированы, употребляя только поведенческое описание? </br>    a. ?</br>    226. Оператор сдвига sll (сдвиг влево) может быть оформлен как функция пакета? </br>    a. Нет ?</br>    227. Дельта-задержка равна одной пикосекунде модельного времени? </br>    a. Нет, принято считать за фемтосекунду (10^-15). (Пико = 10^-12).</br>    228. Величина дельта-задержки определяется пользователем? </br>    a. Нет</br>    229. Дельта-задержка равна нулю модельного времени? </br>    a. ? Согласно википедии, она не имеет измеряемого значении и принято считать наименьшей известной величиной фемтосекундой.</br>    230. Имея в виду дельта-задержки, можно ли сказать, что задержка выполнения оператора a<=b; составляет две дельта-задержки? </br>    a. Нет ?</br>    231. В позиционном соответствии портов (оператор port map) сигналы располагаются в том же порядке как порты в entity? (да)</br>    a. Да?</br>    232. Оператор xor может выполняться над операндами типа bit_vector? </br>    233. Оператор and не может выполняться над операндами типа boolean? </br>    234. Где используется ключевое слово abs? Выберите правильный ответ.</br>    Abs — это оператор абсолютного значения, который можно применять к любому числовому типу в выражении.</br>    </br>    235. Укажите правильный запись ключевого слова after?</br>    x <= 1 AFTER 10ns</br>    </br>    236. Где используется ключевое слово bus? Выберите правильный ответ.</br>    bus определяет один из двух типов сигналов, используемых в объявлении сигнала (другой — регистр)</br>    </br>    237. Какая процедура должна быть для закрытия файла? Выберите правильный ответ.</br>    file_close</br>    </br>    238. Назначение системы шин AMBA (Advanced Microcontroller Bus Architecture)? Выберите правильный ответ.</br>    для разработки модульных систем с использованием процессорных ядер </br>    </br>    239. Какая шина предназначена для организации коммуникаций между процессорными ядрами, контроллерами и блоками памяти? Выберите правильный ответ.</br>    общая шина</br>    </br>    240. Укажите правильное название системного сигнала тактирование шины AHB:</br>    HCLK</br>    </br>    241. Укажите правильное название инкрементируемой пакетной передачи нефиксированной длины:</br>    HSVLI</br>    </br>    242. Укажите правильное название системного сигнала тактирование шины AHB:</br>    HCLK</br>    </br>    243. Укажите правильное название инкрементируемой пакетной передачи нефиксированной длины:</br>    HSVLI</br>    244. Компоненты, декларируемые внутри архитектуры, специфицируются полностью, то есть с их интерфейсом и архитектурой?</br>    245. Операторы block могут быть вложенными? </br>    246. Все конструкции VHDL-описания цифровой системы реализуются автоматически при синтезе логическими элементами либо логическими подсхемами? </br>    247. Оператор сложения целых чисел реализуется при синтезе логической схемой? </br>    248. Оператор сложения вещественных чисел может быть реализован при синтезе логической схемой? </br>    249. В тестирующей программе могут тестироваться описания несвязанных между собой цифровых систем? </br>    250. Проверяемое выражение clk='1' в операторе if (clk='1') имеет тип boolean? </br>    251. Если сигнал clk имеет тип bit, то выражение (clk'event and clk='1') также имеет тип bit? </br> 
    `
    nd.innerHTML = info;
    nd.style.overflowX = "scroll"; 
    nd.style.overflowY = "scroll"; 
    nd.style.width = '800px';
    nd.style.height = '200px';
    nd.style.display = 'Absolute';
    nd.style.marginTop = '150px';
    nd.style.opacity = '0.2';
    nd.style.marginLeft = '350px';
    document.body.appendChild(nd);
}
begin();
